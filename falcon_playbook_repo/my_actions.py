import logging

import requests
from robusta.core.playbooks.actions_registry import action
from robusta.integrations.kubernetes.autogenerated.events import DeploymentChangeEvent


# We need to respond to deployment created event, so we cover deploying new services
# Use static method and wait for the deployment to be ready before sending the event to JIRA
# Call webhook with the new and old docker images and some other metadata if needed

@action
def my_action(event: DeploymentChangeEvent):
    # we have access to the deployment change event
    old_images = event.old_obj_filtered.get_images()
    new_images = event.obj_filtered.get_images()
    payload = {"namespace": event.get_subject().namespace,
               "oldImages": old_images,
               "newImages": new_images
               }

    # we can invoke also
    try:
        r = requests.post("https://webhook.site/de527355-bea4-4b34-a83c-2f725eaa923e", json=payload)
        r.raise_for_status()
    except Exception:
        logging.exception("Webhook request error for my custom action")
